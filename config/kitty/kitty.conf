# ================================ General ================================== #

# Font family. You can also specify different fonts for the
# bold/italic/bold-italic variants. By default they are derived automatically,
# by the OSes font system. Setting them manually is useful for font families
# that have many weight variants like Book, Medium, Thick, etc. For example:
# font_family Operator Mono Book
# bold_font Operator Mono Thick
# bold_italic_font Operator Mono Medium
# font_family      Input Mono

font_family      CaskaydiaCove Nerd Font Mono
bold_font        auto
italic_font      auto
bold_italic_font auto

# Font size (in pts)
font_size 14.5

# ================================ Settings ================================= #
hide_window_decorations titlebar-only
window_margin_width 8

cursor_trail 1

macos_quit_when_last_window_closed no
macos_colorspace default
macos_show_window_title_in window

allow_hyperlinks yes
confirm_os_window_close -2
enable_csi_uac=1
enable_reflow_on_resize no
enable_image_scaling yes
input_delay 1
remember_window_size yes
repaint_delay 8
resize_draw_strategy blank
resize_debounce_time 0.001

# Tab Bar settings (https://sw.kovidgoyal.net/kitty/conf.html#tab-bar)
tab_bar_edge top
tab_bar_style powerline
tab_powerline_style slanted
tab_activity_symbol ï‘„
tab_title_max_length 30
tab_title_template "{fmt.fg.red}{bell_symbol}{fmt.fg.tab} {index}: ({tab.active_oldest_exe}) {title} {activity_symbol}"

# vim:fileencoding=utf-8:ft=conf
term xterm-kitty

# The cursor shape can be one of (block, beam, underline)
shell_integration no-cursor
cursor_shape block

# The interval (in seconds) at which to blink the cursor. Set to zero to
# disable blinking.
cursor_blink_interval 0.5

# Stop blinking cursor after the specified number of seconds of keyboard inactivity. Set to
# zero or a negative number to never stop blinking.
cursor_stop_blinking_after 15.0

# Number of lines of history to keep in memory for scrolling back
scrollback_lines 10000

# Program with which to view scrollback in a new window. The scrollback buffer is passed as
# STDIN to this program. If you change it, make sure the program you use can
# handle ANSI escape sequences for colors and text formatting.
scrollback_pager less +G -R

# Change the color of the kitty window's titlebar on macOS. A value of "system"
# means to use the default system color, a value of "background" means to use
# the default background color and finally you can use an arbitrary color, such
# as #12af59 or "red".
macos_titlebar_color background

# Allow remote control of kitty using the kitty @ remote-control command
allow_remote_control yes

# Hide the window decorations (titlebar, etc) when the window is in fullscreen
hide_window_decorations titlebar-only

# macOS option key acts as alt
macos_option_as_alt no

# ================================ Colors =================================== #

# The color for the border of the active window
active_border_color #ffffff

# The color for the border of inactive windows
inactive_border_color #cccccc

# The selection color for text and background
selection_background #928374
selection_foreground #d79921

# The cursor color
# cursor #d8a657 (redefined below)

# The cursor color
cursor #c0caf5
cursor_text_color #1a1b26

# Selection highlight
selection_foreground none
selection_background #28344a

# The color for highlighting URLs on mouse-over
url_color #9ece6a

# Window borders
active_border_color #3d59a1
inactive_border_color #101014
bell_border_color #e0af68

# Title bar
macos_titlebar_color #16161e

# ================================ Themes =================================== #

# -------------------------------- Gruvbox ---------------------------------- #
# Gruvbox-inspired Material terminal color scheme

# background #282828
# foreground #fbf1c7

# Tabs
# active_tab_font_style bold
# active_tab_background #282828
# active_tab_foreground #fbf1c7
# inactive_tab_font_style normal
# inactive_tab_background #282828
# inactive_tab_foreground #fbf1c7

# The 16 terminal colors. There are 8 basic colors, each color has a dull and
# bright version.

# black
# color0   #504945
# color8   #665c54
# 
# # red
# color1   #ea6962
# color9   #ef8b7b
# 
# # green
# color2   #a9b665
# color10  #c3d69b
# 
# # yellow
# color3   #d8a657
# color11  #e5c07b
# 
# # blue
# color4   #7daea3
# color12  #89c9b8
# 
# # purple
# color5   #d3869b
# color13  #e1acbb
# 
# # aqua
# color6   #89b482
# color14  #a1cfa8
# 
# # white (FG3/FG4)
# color7   #a89984
# color15  #d4be98

# -------------------------------- Tokyo Night ------------------------------ #
# Tokyo Night color scheme for kitty terminal emulator
# https://github.com/davidmathers/tokyo-night-kitty-theme
#
# Based on Tokyo Night color theme for Visual Studio Code
# https://github.com/enkia/tokyo-night-vscode-theme

foreground #a9b1d6
background #1a1b26

# Tab bar
tab_fade 1
tab_bar_style fade
tab_bar_background #101014

# Tabs
active_tab_font_style   bold
active_tab_foreground   #3d59a1
active_tab_background   #16161e
inactive_tab_font_style bold
inactive_tab_foreground #787c99
inactive_tab_background #16161e

# This color scheme is designed to be easy on the eyes with a dark background
# and vibrant colors for syntax highlighting. It is inspired by the Tokyo Night
# theme for Visual Studio Code and aims to provide a consistent look and feel
# across different applications.

# Black
color0 #414868
color8 #414868

# Red
color1 #f7768e
color9 #f7768e

# Green
color2  #73daca
color10 #73daca

# Yellow
color3  #e0af68
color11 #e0af68

# Blue
color4  #7aa2f7
color12 #7aa2f7

# Magenta
color5  #bb9af7
color13 #bb9af7

# Cyan
color6  #7dcfff
color14 #7dcfff

# White
color7  #c0caf5
color15 #c0caf5

# ================================ NF Support =============================== #

# Nerd Fonts v3.1.0
symbol_map U+e000-U+e00a,U+ea60-U+ebeb,U+e0a0-U+e0c8,U+e0ca,U+e0cc-U+e0d4,U+e200-U+e2a9,U+e300-U+e3e3,U+e5fa-U+e6b1,U+e700-U+e7c5,U+f000-U+f2e0,U+f300-U+f372,U+f400-U+f532,U+f0001-U+f1af0 Symbols Nerd Font Mono
symbol_map U+F0001-U+F1af0 CaskaydiaCove Nerd Font
# symbol_map U+F0001-U+F1af0 Hack Nerd Font Mono
# symbol_map U+F8FF,U+100000-U+1018C7 SF Pro Mono

# Symbol mapping (special font for specified unicode code points). Map the
# specified unicode codepoints to a particular font. Useful if you need special
# rendering for some symbols, such as for Powerline. Avoids the need for
# patched fonts. Each unicode code point is specified in the form U+<code point
# in hexadecimal>. You can specify multiple code points, separated by commas
# and ranges separated by hyphens. symbol_map itself can be specified multiple times.
# Syntax is:
#
# symbol_map codepoints Font Family Name
#
# For example:
#
# symbol_map U+E0A0-U+E0A2,U+E0B0-U+E0B3 PowerlineSymbols

# ================================ Keybindings ============================== #

# Key mapping
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.

# map cmd+1 goto_tab 1
map cmd+t launch --type=tab --cwd=current
map cmd+n launch --type=os-window --cwd=current 

# Navigate through text
map alt+left  send_text all \x1b[1;3D
map alt+right send_text all \x1b[1;3C
map cmd+left  send_text all \x1bOH 
map cmd+right send_text all \x1bOF

# Clipboard
map super+v              paste_from_clipboard
map ctrl+shift+s         paste_from_selection
map super+c              copy_to_clipboard
map shift+insert         paste_from_selection

# Scrolling
map ctrl+shift+up        scroll_line_up
map ctrl+shift+down      scroll_line_down
map ctrl+shift+k         scroll_line_up
map ctrl+shift+j         scroll_line_down
map ctrl+shift+page_up   scroll_page_up
map ctrl+shift+page_down scroll_page_down
map ctrl+shift+home      scroll_home
map ctrl+shift+end       scroll_end
map ctrl+shift+h         show_scrollback

# Window management
map super+n              new_os_window
map super+w              close_window
map ctrl+shift+enter     new_window
map ctrl+shift+]         next_window
map ctrl+shift+[         previous_window
map ctrl+shift+f         move_window_forward
map ctrl+shift+b         move_window_backward
map ctrl+shift+`         move_window_to_top
map ctrl+shift+1         first_window
map ctrl+shift+2         second_window
map ctrl+shift+3         third_window
map ctrl+shift+4         fourth_window
map ctrl+shift+5         fifth_window
map ctrl+shift+6         sixth_window
map ctrl+shift+7         seventh_window
map ctrl+shift+8         eighth_window
map ctrl+shift+9         ninth_window
map ctrl+shift+0         tenth_window
 
# Tab management
map ctrl+shift+right     next_tab
map ctrl+shift+left      previous_tab
map ctrl+shift+t         new_tab
map ctrl+shift+q         close_tab
map ctrl+shift+l         next_layout
map ctrl+shift+.         move_tab_forward
map ctrl+shift+,         move_tab_backward

# Miscellaneous
map ctrl+shift+up        increase_font_size
map ctrl+shift+down      decrease_font_size
map ctrl+shift+backspace restore_font_size

